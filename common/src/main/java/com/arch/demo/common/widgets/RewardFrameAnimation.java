package com.arch.demo.common.widgets;import android.content.Context;import android.graphics.drawable.AnimationDrawable;import android.media.AudioManager;import android.media.MediaPlayer;import android.util.AttributeSet;import android.view.LayoutInflater;import android.view.View;import android.widget.FrameLayout;import android.widget.ImageView;import com.arch.demo.common.R;public class RewardFrameAnimation extends FrameLayout {    public interface OnAnimationListener {        void onAnimationFinish();    }    private Context mContext;    private ImageView mStartImage;    private MediaPlayer mMediaPlayer;    public RewardFrameAnimation(Context context) {        this(context, null);    }    public RewardFrameAnimation(Context context, AttributeSet attrs) {        this(context, attrs, 0);    }    public RewardFrameAnimation(Context context, AttributeSet attrs, int defStyleAttr) {        super(context, attrs, defStyleAttr);        init(context);    }    private void init(Context context) {        mContext = context;        View rootView = LayoutInflater.from(mContext).inflate(R.layout.widget_reward_frame_animation_view_layout, this, false);        mStartImage = rootView.findViewById(R.id.iv_start);        addView(rootView);    }    public void playAudio(int sourceId) {        playAudio(sourceId, null);    }    public void playAudio(int sourceId, MediaPlayer.OnCompletionListener completionListener) {        if (mMediaPlayer != null) {            mMediaPlayer.release();            mMediaPlayer = null;        }        try {            mMediaPlayer = MediaPlayer.create(mContext, sourceId);            if (mMediaPlayer != null) {                mMediaPlayer.setAudioStreamType(AudioManager.STREAM_MUSIC);                mMediaPlayer.setOnPreparedListener(mp2 -> {                    mp2.start();                });                mMediaPlayer.setOnCompletionListener(completionListener);            }        } catch (Exception e) {            e.printStackTrace();        }    }    public void startAnimation(int score, OnAnimationListener listener) {        switch (score) {            case 3:                mStartImage.setBackgroundResource(R.drawable.anim_reward_frame_excellent);                playAudio(R.raw.start_3);                break;            case 2:                mStartImage.setBackgroundResource(R.drawable.anim_reward_frame_great);                playAudio(R.raw.start_2);                break;            default:                mStartImage.setBackgroundResource(R.drawable.anim_reward_frame_nice);                playAudio(R.raw.start_1);                break;        }        setVisibility(View.VISIBLE);        AnimationDrawable animPlay = (AnimationDrawable) mStartImage.getBackground();        animPlay.start();        mStartImage.postDelayed(new Runnable() {            @Override            public void run() {                stopSpeakRecordAnimation();                if (listener != null) {                    listener.onAnimationFinish();                }            }        }, 1400);    }    private void stopSpeakRecordAnimation() {        AnimationDrawable animPlay = (AnimationDrawable) mStartImage.getBackground();        animPlay.stop();        setVisibility(GONE);    }}